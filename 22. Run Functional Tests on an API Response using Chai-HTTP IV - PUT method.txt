22. Run Functional Tests on API Response using Chai-HTTP IV - PUT method
-------------------------------------------------------------------------
This exercise is similar to the previous one.

Now that you know how to test a PUT request, it's your turn to do it from scratch.

Within tests/2_functional-tests.js, alter the 'Send {surname: "da Verrazzano"}' test (// #4) and use the put and send methods to 
test the '/travellers' endpoint.

Send the following JSON object with your PUT request:

{
  "surname": "da Verrazzano"
}
Check for the following within the request.end callback:

The status should be 200
The type should be application/json
The body.name should be Giovanni
The body.surname should be da Verrazzano
Follow the assertion order above - we rely on it. Also, be sure to remove assert.fail() once complete.

Solution
--------
 // #4
    test('Send {surname: "da Verrazzano"}', function (done) {
       chai
    .request(server)
    .put('/travellers')
    /** send {surname: 'Colombo'} here **/
    .send({ surname: 'da Verrazzano' })
    // .send({...})
    .end(function(err, res) {
      /** your tests here **/
      assert.equal(res.status, 200);
      assert.equal(res.type, 'application/json');
      assert.equal(
        res.body.name,
        'Giovanni'
      );
      assert.equal(
        res.body.surname,
        'da Verrazzano'
      )});

      done(); 
    });
  });
});

